<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task" xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd


http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <mvc:default-servlet-handler/>
    <bean id="myThreadPool"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5"/>
        <!--最小线程数 -->
        <property name="maxPoolSize" value="10"/>
        <!--最大线程数 -->
        <property name="queueCapacity" value="50"/>
        <!--缓冲队列大小 -->
        <property name="threadNamePrefix" value="abc-"/>
        <!--线程池中产生的线程名字前缀 -->
        <property name="keepAliveSeconds" value="30"/>
        <!--线程池中空闲线程的存活时间单位秒 -->
    </bean>

    <!--    <mvc:annotation-driven>
            <mvc:async-support task-executor="myThreadPool"
                               default-timeout="600">
                <mvc:callable-interceptors>
                    <bean class="com.zhongyu.ABC" />
                </mvc:callable-interceptors>
            </mvc:async-support>
        </mvc:annotation-driven>-->
    <!-- Executor -->
    <task:executor id="executor" pool-size="30"/>
    <task:annotation-driven executor="executor"/>

    <mvc:annotation-driven enableMatrixVariables="true" validator="validator">
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
            </bean>
<!--            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>&lt;!&ndash; 避免IE出现下载JSON文件的情况 &ndash;&gt;
                    </list>
                </property>
            </bean>-->
        </mvc:message-converters>
        <mvc:argument-resolvers>
            <bean class="com.yg.annotaion.impl.BeanBindProcess"/>
            <bean class="com.yg.annotaion.impl.MapBindProcess"/>
        </mvc:argument-resolvers>
        <mvc:async-support default-timeout="2000" task-executor="myThreadPool">
            <mvc:callable-interceptors>
                <bean class="com.yg.intercept.ABC"></bean>
            </mvc:callable-interceptors>
        </mvc:async-support>
    </mvc:annotation-driven>
    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
<!--
        <bean id="mappingJacksonHttpMessageConverter"
              class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
            <property name="supportedMediaTypes">
                <list>
                    <value>application/json;charset=UTF-8</value>
                </list>
            </property>
        </bean>
-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="UTF-8">
        <!--<property name="defaultEncoding" value="utf-8"></property>-->
        <!-- 最大上传大小100M -->
        <property name="maxUploadSize" value="#{initData['maxUploadSize']}"></property>
        <property name="maxInMemorySize" value="#{initData['maxInMemorySize']}"></property>
    </bean>
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <!--    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
            <property name="messageConverters">
                <list>
                    <ref bean="mappingJacksonHttpMessageConverter"/>
                    &lt;!&ndash; json转换器 &ndash;&gt;
                </list>
            </property>
        </bean>-->
    <!-- 定时往socketio里面发送信息
    <bean id="timerTaskService" class="com.cmb.appversion.controller.SocketIOTimeTask"></bean>

    <bean id="scheduleTimer" class="org.springframework.scheduling.timer.ScheduledTimerTask">
        <property name="timerTask" ref="timerTaskService" />
        <property name="period" value="${socketio.sendmsg.time}"></property>
    </bean>

    <bean id="scheduleTimerFactory" class="org.springframework.scheduling.timer.TimerFactoryBean">
        <property name="scheduledTimerTasks">
            <list>
                <ref bean="scheduleTimer" />
            </list>
        </property>
    </bean> -->

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
        <property name="contentType" value="text/html; charset=utf-8"/>
        <property name="exposePathVariables" value="false"/>
    </bean>

    <bean id="htmlviewResolver"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="suffix" value=".html"/>
        <property name="contentType" value="text/html;charset=UTF-8"></property>
    </bean>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <property name="validationMessageSource" ref="messageSource"/>
        <!--<property name="validationProperties" value="classpath*:messages.properties"/>-->

    </bean>
</beans>